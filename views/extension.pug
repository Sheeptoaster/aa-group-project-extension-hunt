extends layout

include utils.pug

block content
	script(src="/javascripts/apiComments.js" type="module")
	div(id='main-extension-container')
		div(id='extension-page-header')
			h1(id='extension-name')= extension.name
			p(id='slogan')= extension.slogan
			img(src= extension.iconURL id='extension-icon')
		div(id='extension-page-body')
			div(id='extension-details')
				img(src= extension.extensionImg id='extension-img')
				p(id='extension-description')= extension.description
			div#extension-actions
				div(id='extension-btn-container')
					button(type="disabled" id='upvote-btn-extension' extensionId=`${extension.id}`).cta-button
						div.triangle
						text#upvote-btn-text Upvote
						upvote.extension-upvotes #{extension.upvotes}
					if user && user.id === extension.ownerId
						div
							form(action=`/extensions/${extension.id}/edit` method='GET')
								button.secondary-button(type="submit" id='edit-btn-extension') Edit Extension
					else
						div
							form(action=`/extensions/${extension.id}/edit` method='GET')
								button.secondary-button.hidden(type="submit" id='edit-btn-extension' owner=extension.ownerId) Edit Extension
				div.sidebar-container
					h2.sidebar-h2 Maker
					img(src=`${extension.User.avatarURL}` alt=`${extension.User.username}`).maker-img
					a(href=`/profiles/${extension.User.id}`).maker-name #{extension.User.username}
				div.sidebar-container
					h2.sidebar-h2 Categories
						div.category-container
							each category in extension.Categories
								div.category-name #{category.name}
			div(id='comments-container')
				div
					form(action="" id='add-comment-form')
						input(type="hidden" name="_csrf" value=csrfToken)
						img(id="user-avatar" src=user ? user.avatarURL : "/images/extension-hunt-logo.png" alt=user ? user.username : "avatar").maker-img
						+field('', 'content', "", 'form-group', 'extension-comment-field', "text", "What do you think of this extension?")
						//- TODO #60 SEND button opens sign-up if not logged in
						button(type="submit" disabled= !locals.authenticated).cta-button#send-comment SEND
				div(id='comment-section')
					script.
						const handleDelete = (id) => {
							const cancelBtn = document.querySelector(`#comment-delete-cancel-btn${id}`);
							const deleteBtn = document.querySelector(`#comment-delete-submit-btn${id}`);
							const editBtn = document.querySelector(`#edit-btn${id}-submit`);
							const trashBtn = document.querySelector(`#delete-btn${id}-submit`);

							editBtn.classList.add('hidden');
							trashBtn.classList.add("hidden");
							deleteBtn.removeAttribute('hidden');
							cancelBtn.removeAttribute("hidden");
						}

						const handleCancel = (id) => {
							const cancelBtn = document.querySelector(`#comment-delete-cancel-btn${id}`);
							const deleteBtn = document.querySelector(`#comment-delete-submit-btn${id}`);
							const editBtn = document.querySelector(`#edit-btn${id}-submit`);
							const trashBtn = document.querySelector(`#delete-btn${id}-submit`);

							editBtn.classList.remove('hidden');
							trashBtn.classList.remove("hidden");
							deleteBtn.setAttribute('hidden', "");
							cancelBtn.setAttribute("hidden", "");
						}
						const deleteComment = async (idTag, id) => {
							const addCommentForm = document.querySelector(`#add-comment-form`)
							const formData = new FormData(addCommentForm)
							const csrf = formData.get('_csrf')


							const removed = document.querySelector(idTag)
							if(removed !== null) {
								removed.remove()
							}
							const res = await fetch(`/api/comments/${id}/delete`, {
								method: "POST",
								headers: {
									"Content-Type": "application/json",
								},
								body: JSON.stringify({
									_csrf: csrf,
								}),
							})
						}
						const editComment = async (id) => {
							const edit = document.querySelector(`#comment-edit${id}`)
							const btn = document.querySelector(`#comment-edit-submit-btn${id}`)

							edit.classList.add("comment-edit-input")
							edit.setAttribute('contenteditable', 'true')

							btn.removeAttribute('hidden')
						}
						const submitEdit = async (id) => {
							const addCommentForm = document.querySelector(`#add-comment-form`)
							const formData = new FormData(addCommentForm)
							const csrf = formData.get('_csrf')
							const submitBtn = document.querySelector(`#comment-edit-submit-btn${id}`)
							const editText = document.querySelector(`#comment-edit${id}`)
							if (editText !== null) {
								editText.classList.remove('comment-edit-input')
								editText.setAttribute('contenteditable', 'false')
								submitBtn.setAttribute("hidden", "")
								const res = await fetch(`/api/comments/${id}/edit`, {
									method: "POST",
									headers: {
										"Content-Type": "application/json",
									},
									body: JSON.stringify({
										content: editText.innerText,
										_csrf: csrf,
									}),
								})
							}
						}
					ul#content-container
						each comment in comments
							if user && user.id === comment.userId
								li(class=`comment-li` id=`comment${comment.id}`)
									img(src=comment.User.avatarURL, class='comment-avatar-img')
									a.comment-username(href= `/profiles/${comment.User.id}`)= comment.User.username
									span(class='comment-content' id=`comment-edit${comment.id}` contenteditable='false')= comment.content
									button(
										type='submit' class="comment-edit-submit-btn" id=`comment-edit-submit-btn${comment.id}`
										hidden
										onclick=`submitEdit(${comment.id})`
									) Edit
									button(
										type='submit' class="comment-delete-submit-btn" id=`comment-delete-submit-btn${comment.id}`
										hidden
										onclick=`deleteComment('#comment${comment.id}', ${comment.id})`
									) Delete
									button(
										type='submit'
										class="comment-delete-cancel-btn" id=`comment-delete-cancel-btn${comment.id}`
										hidden
										onclick=`handleCancel(${comment.id})`
									) Cancel
									div.comment-btns
										i.fa.fa-pencil(
											aria-hidden='true' class='edit-comment-btn'
											id=`edit-btn${comment.id}-submit`
											onclick=`editComment(${comment.id})`
										)

										i.fa.fa-trash(
											aria-hidden='true' class='delete-comment-btn'
											id=`delete-btn${comment.id}-submit`
											onClick=`handleDelete(${comment.id})`
										)
							else
								li(class='comment-li')
									img(src=comment.User.avatarURL, class='comment-avatar-img')
									a.comment-username(href= `/profiles/${comment.User.id}`)= comment.User.username
									span(class='comment-content')= comment.content
									div(class="comment-timestamp")= comment.updatedAt.toLocaleString()
