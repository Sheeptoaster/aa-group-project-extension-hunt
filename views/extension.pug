extends layout

include utils.pug

block content
	script(src="/javascripts/apiComments.js" type="module")
	div(id='main-extension-container')
		div(id='extension-page-header')
			h1(id='extension-name')= extension.name
			p(id='slogan')= extension.slogan
			img(src= extension.iconURL id='extension-icon')
		div(id='extension-page-body')
			div(id='extension-details')
				img(src= extension.extensionImg id='extension-img')
				p(id='extension-description')= extension.description
			div(id='extension-btn-container')
				button(type="disabled" id='upvote-btn-extension' extensionId=`${extension.id}`)
					div.triangle
					text#upvote-btn-text Upvote
					upvote.extension-upvotes #{extension.upvotes}
					if currentUserId === extension.ownerId
						div
							form(action=`/extensions/${extension.id}/edit` method='GET')
								button(type="submit" id='edit-btn-extension') Edit Extension
					else
						div(id='extension-edit-btn')
							form(action=`/extensions/${extension.id}/edit` method='GET')
								button.extension-edit-btn(type="submit" id='edit-btn-extension' owner=extension.ownerId) Edit Extension
			div(id='comments-container')
				div
					form(action="" id='add-comment-form')
						input(type="hidden" name="_csrf" value=csrfToken)#csrfToken
						+field('', 'content', "", 'form-group', 'extension-comment-field', "text", "What do you think of this extension?")
						//- TODO #60 SEND button opens sign-up if not logged in
						if locals.authenticated
							button(type="submit" disabled= false)#create-comment SEND
						else
							button(type="submit" disabled= true)#create-comment SEND
				div(id='comment-section')
					script.
						const deleteComment = async (idTag, id) => {
							const removed = document.querySelector(idTag.toString())
							if(removed !== null) {
								removed.remove()
							}
							const res = await fetch(`/api/comments/${id}/delete`, {
								method: "POST",
								headers: {
									"Content-Type": "application/json",
								},
								body: JSON.stringify({
									_csrf: csrfToken.value,
								}),
							})
						}

					script.
						const editComment = async (id) => {
							const edit = document.querySelector(`#comment-edit${id}`)
							const btn = document.querySelector(`#comment-edit-submit-btn${id}`)

							edit.classList.add("comment-edit-input")
							edit.setAttribute('contenteditable', 'true')

							btn.removeAttribute('hidden')
						}

					script.
						const submitEdit = async (id) => {
							const editText = document.querySelector(`#comment-edit${id}`)

							const res = await fetch(`/api/comments/${id}/edit`, {
								method: "POST",
								headers: {
									"Content-Type": "application/json",
								},
								body: JSON.stringify({
									_csrf: csrfToken.value,
									content: editText.innerHTML,
								}),
							})

							const submitBtn = document.querySelector(`#comment-edit-submit-btn${id}`)


							editText.classList.remove('comment-edit-input')
							editText.setAttribute('contenteditable', 'false')

							submitBtn.setAttribute("hidden", "")

						}
					ul#content-container
						each comment in comments
							if comment.userId == currentUserId
								li(class=`comment-li` id=`comment${comment.id}`)
									img(src=comment.User.avatarURL, class='comment-avatar-img')
									a.comment-username(href= `/profiles/${comment.User.id}`)= comment.User.username
									span(class='comment-content' id=`comment-edit${comment.id}` contenteditable='false')= comment.content
									button(
										type='submit' class="comment-edit-submit-btn" id=`comment-edit-submit-btn${comment.id}`
										hidden
										onclick=`submitEdit(${comment.id})`
									) Edit
									div.comment-btns
										i.fa.fa-undo(
											aria-hidden='true' class='edit-comment-btn'
											id=`edit-btn${comment.id}-submit`
											onclick=`editComment(${comment.id})`
										)

										i.fa.fa-trash(
											aria-hidden='true' class='delete-comment-btn'
											onClick=`deleteComment('#comment${comment.id}', ${comment.id})`
										)
							else
								li(class='comment-li')
									img(src=comment.User.avatarURL, class='comment-avatar-img')
									a.comment-username(href= `/profiles/${comment.User.id}`)= comment.User.username
									span(class='comment-content')= comment.content
